/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule UserCanViewTheirOwnProfileOnly {
  description: "User can view and update their profile only"
  participant(p): "org.example.akcess.User"
  operation: READ, UPDATE
  resource(r): "org.example.akcess.User"
  condition: (p.getIdentifier() == r.getIdentifier())
  action: ALLOW
}

rule VerifierCanViewTheirOwnProfile {
  description: "Verifier have read and update akcess to their profile"
  participant(p): "org.example.akcess.Verifier"
  operation: READ, UPDATE
  resource(r): "org.example.akcess.Verifier"
  condition: (p.getIdentifier() == r.getIdentifier())
  action: ALLOW
}

rule VerifierCanViewUserProfile {
  description: "Verifier have only read access to user profile"
  participant: "org.example.akcess.Verifier"
  operation: ALL
  resource: "org.example.akcess.User"
  action: ALLOW
}

rule UserCanViewVerifierProfile {
  description: "User can view all the verifier profiles"
  participant: "org.example.akcess.User"
  operation: READ
  resource: "org.example.akcess.Verifier"
  action: ALLOW
}

rule AnyoneCanSubmitAddDocumentTransaction {
  description: "Anyone can submit addDocument transaction"
  participant: "ANY"
  operation: ALL
  resource: "org.example.akcess.addDocument"
  action: ALLOW
}

rule UserCanAddDocumentThroughTransactionOnly {
  description: "User can add a document through transaction only"
  participant: "org.example.akcess.User"
  operation: CREATE
  resource: "org.example.akcess.Document"
  transaction: "org.example.akcess.addDocument"
  action: ALLOW
}

rule UserCanViewTheirOwnDocumentsOnly {
  description: "Users can read their own documents only"
  participant(p): "org.example.akcess.User"
  operation: READ
  resource(r): "org.example.akcess.Document"
  condition: (p.getIdentifier() == r.User.getIdentifier())
  action: ALLOW
}
rule VerifiersCanViewTheirOriginalDocumentsOnly {
  description: "verifier can read their original documents only"
  participant(p): "org.example.akcess.Verifier"
  operation: READ
  resource(r): "org.example.akcess.OriginalDocument"
  condition: (p.getIdentifier() == r.Verifier.getIdentifier())
  action: ALLOW
}

rule VerifiersCanCreateTheirOriginalDocumentsOnly {
  description: "verifier can Create their original documents only"
  participant(p): "org.example.akcess.Verifier"
  operation: CREATE
  resource(r): "org.example.akcess.OriginalDocument"
  condition: (p.getIdentifier() == r.Verifier.getIdentifier())
  action: ALLOW
}
rule VerifierCanReadAllTheDocuments {
  description: "Verifier can read all the documents"
  participant: "org.example.akcess.Verifier"
  operation: READ
  resource: "org.example.akcess.Document"
  action: ALLOW
}

rule UserCanDeleteTheDocument {
  description: "User can delete his own document"
  participant(p): "org.example.akcess.User"
  operation: DELETE
  resource(r): "org.example.akcess.Document"
  condition: (p.getIdentifier() == r.User.getIdentifier())
  action: ALLOW
}

rule OnlyVerifierCanVerifyDocument {
  description: "only Verifier can call the verifyDocument transaction"
  participant: "org.example.akcess.Verifier"
  operation: ALL
  resource: "org.example.akcess.verifyDocument"
  action: ALLOW
}

rule VerifierCanUpdateDocumentViaTransactionOnly {
  description: "Verifier can update the document via verifyDocument transaction only"
  participant: "org.example.akcess.Verifier"
  operation: UPDATE
  resource: "org.example.akcess.Document"
  transaction: "org.example.akcess.verifyDocument"
  action: ALLOW
}

rule UserSeeOwnHistoryOnly {
    description: "User should be able to see the history of their own transactions only"
    participant(t): "org.example.akcess.User"
    operation: READ
    resource(v): "org.hyperledger.composer.system.HistorianRecord"
    condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
    action: DENY
}

rule VerifierSeeOwnHistoryOnly {
    description: "Verifier should be able to see the history of their own transactions only"
    participant(t): "org.example.akcess.Verifier"
    operation: READ
    resource(v): "org.hyperledger.composer.system.HistorianRecord"
    condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
    action: DENY
}

rule SystemACL {
    description: "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}